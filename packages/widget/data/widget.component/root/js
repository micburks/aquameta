import html from '/db/widget/core/html.js';
import React from '/db/widget/dep/react.js';
import {client, database, query} from '/db/widget/core/datum.js';
import {Helmet, HelmetProvider} from '/db/widget/dep/react-helmet-async.js';
import styled from '/db/widget/dep/styled-components.js';
import SlideContainer from '/db/widget/component/slide-container.js';
import Slide from '/db/widget/component/slide.js';
import useDatum from '/db/widget/core/use-datum.js';
import Centered from '/db/widget/component/centered.js';

const LoadingMessage = styled.span`
  color: rgba(0, 0, 0, 0.7);
`;

const datum = query(
  client.endpoint(),
  database.select(
    // database.orderByAsc('number', database.relation('pres.slide'))
    database.relation('pres.slide')
  )
);

export default function Root() {
  const slides = useDatum(datum);
  const [slideIndex, setSlideIndex] = React.useState(0);
  const slide = slides[slideIndex];

  function moveSlide(toIndex) {
    if (toIndex >= 0 && toIndex < slides.length) {
      setSlideIndex(toIndex);
    }
  }

  return slide
    ? html`
      <${HelmetProvider}>
        <${Helmet}>
          <link rel="stylesheet" type="text/css" href="https://dev.jspm.io/npm:github-markdown-css@3.0.1/github-markdown.css" />
        <//>
        <${SlideContainer}
          className="markdown-body"
          previous=${() => moveSlide(slideIndex-1)}
          previousDisabled=${slideIndex === 0}
          next=${() => moveSlide(slideIndex+1)}
          nextDisabled=${slideIndex === (slides.length - 1)}
        >
          <${Slide} slide=${slide}/>
        <//>
      <//>
    `
    : html`
      <${Centered}>
        <${LoadingMessage}>Presentation loading<//>
      <//>
    `;
}
