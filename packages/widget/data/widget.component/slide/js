import html from '/db/widget/core/html.js';
import React from '/db/widget/dep/react.js';
import styled from '/db/widget/dep/styled-components.js';
import Markdown from '/db/widget/component/markdown.js';

const SlideWrapper = styled.div`
  border: 2px solid rgba(0, 0, 0, 0.8);
  border-radius: 2px;
  color: rgba(0, 0, 0, 0.8);
  height: 100%;
  padding: 20px 30px;
`;

function LazyLoader({importPath}) {
  const LazyComp = React.useMemo(() => {
    return React.lazy(() => import(importPath));
  }, [importPath]);
  return html`
    <${React.Suspense} fallback=${html`<${Loading} />`}>
      <${LazyComp}/>
    <//>
  `;
}

function Loading() {
  return html`<span>Loading...<//>`
}

const shortcodeRegex = /SHORTCODE'(.*?)'END/g;
export default function Slide(props) {
  let content = props.slide.markdown;
  const children = [];
  while (true) {
    const match = shortcodeRegex.exec(content);
    if (!match) {
      break;
    }
    const markdown = content.slice(0, match.index);
    const [shortcode, importPath] = match;
    content = content.slice(match.index + shortcode.length);
    const l = children.length;
    children.push(
      html`<${Markdown} key=${l+'md'} markdown=${markdown} />`,
      html`<${LazyLoader} key=${l+'comp'} importPath=${importPath} />`,
    );
  }
  if (content) {
    const l = children.length;
    children.push(
      html`<${Markdown} key=${l+'md'} markdown=${content} />`
    );
  }
  return html`
    <${SlideWrapper}>
      ${children}
    <//>
  `;
}
